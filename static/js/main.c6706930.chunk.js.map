{"version":3,"sources":["containers/Home/style.js","containers/Home/index.js","components/Something/style.js","components/Something/index.js","utils/colorTranslator.js","utils/backgrounTranslator.js","containers/InfiniteList/style.js","containers/InfiniteList/index.js","containers/LazyImage/style.js","containers/LazyImage/index.js","components/GlobalStyle/index.js","components/NavigationBar/style.js","components/NavigationBar/index.js","containers/App/index.js","index.js"],"names":["Container","styled","div","Title","h1","StatusContainer","StatusList","ul","StatusListItem","li","StatusTitle","StatusContent","RootContainer","RootTag","Target","Home","rootRef","useRef","targetRef","useState","entryInformation","setEntryInformation","toggleCount","setToggleCount","isIntersecting","intersectionRatio","target","time","useEffect","root","current","observer","IntersectionObserver","entries","forEach","entry","console","log","previous","threshold","observe","unobserve","toString","innerText","ref","zoomIn","keyframes","props","isShow","Image","img","Something","page","src","alt","colorTranslator","backgroundTranslator","color","background","Wrapper","List","ListItem","ID","p","Name","Body","ToggleLoading","LoadingTag","Skeleton","PageWrapper","Page","span","InfiniteList","toggleLoadingRef","data","setData","setPage","isLoading","setIsLoading","a","end","idList","counter","push","Promise","all","map","id","fetch","response","json","newData","previousData","fetchData","length","previousPage","toggleLoading","key","name","body","LazyImage","lazyLoading","image","dataset","classList","remove","lazyImages","document","getElementsByClassName","Array","from","lazyImage","readyState","removeEventListener","addEventListener","className","data-src","renderImages","createGlobalStyle","StyledLink","NavLink","selected","NavigationBar","defaultPath","window","location","pathname","currentPath","setCurrentPath","isHome","isInfiniteList","isLazyImage","to","onClick","App","basename","GlobalStyle","exact","path","component","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.c6706930.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.div`\n  width: 100%;\n  max-width: 1024px;\n  padding: 0 32px;\n  margin: auto;\n`;\n\nexport const Title = styled.h1`\n  margin: 32px 0 0;\n  text-align: center;\n`;\n\nexport const StatusContainer = styled.div``;\n\nexport const StatusList = styled.ul`\n  list-style: none;\n  margin: 0;\n  padding: 0;\n  margin-top: 32px;\n`;\n\nexport const StatusListItem = styled.li`\n  display: flex;\n  align-items: center;\n  margin-bottom: 16px;\n`;\n\nexport const StatusTitle = styled.div`\n  flex: 1;\n  font-weight: bold;\n`;\n\nexport const StatusContent = styled.div`\n  flex: 4;\n  color: #303f9f;\n`;\n\nexport const RootContainer = styled.div`\n  position: relative;\n  height: 320px;\n  overflow: auto;\n  border: 1px solid #388e3c;\n`;\n\nexport const RootTag = styled.div`\n  position: sticky;\n  top: 0;\n  left: 0;\n  display: inline-block;\n  padding: 4px;\n  border: 1px solid #388e3c;\n  border-top: none;\n  border-left: none;\n`;\n\nexport const Target = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin: 1000px auto 1000px;\n  width: 200px;\n  height: 200px;\n  color: #ffffff;\n  background: #ff0000;\n`;\n","import React, { useRef, useState, useEffect } from 'react';\nimport {\n  Container,\n  Title,\n  StatusContainer,\n  StatusList,\n  StatusListItem,\n  StatusTitle,\n  StatusContent,\n  RootContainer,\n  RootTag,\n  Target,\n} from './style';\n\nconst Home = () => {\n  const rootRef = useRef();\n  const targetRef = useRef();\n  const [entryInformation, setEntryInformation] = useState({});\n  const [toggleCount, setToggleCount] = useState(0);\n  const isIntersecting = entryInformation.isIntersecting || 'false';\n  const intersectionRatio = entryInformation.intersectionRatio || '0';\n  const target = entryInformation.target || '';\n  const time = entryInformation.time || '';\n\n  useEffect(() => {\n    // 取得 root 和 target 元件\n    const root = rootRef.current;\n    const target = targetRef.current;\n\n    // 確認 root 和 target 元件存在\n    if (!root || !target) return;\n\n    // 設定 callback\n    const callback = entries => {\n      entries.forEach(entry => {\n        console.log(entry);\n        setEntryInformation(entry);\n        setToggleCount(previous => previous + 1);\n      });\n    };\n\n    // 設定 options\n    const options = {\n      root: root,\n      threshold: [0, 0.25, 0.5, 0.75, 1],\n    };\n\n    // 建立 observer 並對 target 進行觀察\n    const observer = new IntersectionObserver(callback, options);\n    observer.observe(target);\n\n    return () => observer.unobserve(target);\n  }, [rootRef, targetRef]);\n\n  return (\n    <Container>\n      {/* 頁面標題 */}\n      <Title>Intersection Observer</Title>\n\n      {/* Status 容器 */}\n      <StatusContainer>\n        <StatusList>\n          {/* Toggle Count 觸發幾次 */}\n          <StatusListItem>\n            <StatusTitle>Toggle Count:</StatusTitle>\n            <StatusContent>{toggleCount} 次</StatusContent>\n          </StatusListItem>\n\n          {/* isIntersecting 是否和頁面交互 */}\n          <StatusListItem>\n            <StatusTitle>isIntersecting: </StatusTitle>\n            <StatusContent>{isIntersecting.toString()}</StatusContent>\n          </StatusListItem>\n\n          {/* intersectionRatio 交互的比例 */}\n          <StatusListItem>\n            <StatusTitle>intersectionRatio: </StatusTitle>\n            <StatusContent>{intersectionRatio.toString()}</StatusContent>\n          </StatusListItem>\n\n          {/* Target 產生交互的元件 */}\n          <StatusListItem>\n            <StatusTitle>target: </StatusTitle>\n            <StatusContent>{target.innerText}</StatusContent>\n          </StatusListItem>\n\n          {/* Time 交互觸發的時間 */}\n          <StatusListItem>\n            <StatusTitle>Time: </StatusTitle>\n            <StatusContent>{time} 毫秒</StatusContent>\n          </StatusListItem>\n        </StatusList>\n      </StatusContainer>\n\n      {/* Root 容器 */}\n      <RootContainer ref={rootRef}>\n        {/* 作為提示的 Tag */}\n        <RootTag>root: RootContainer</RootTag>\n\n        {/* 觀察的目標 */}\n        <Target ref={targetRef}>This is target</Target>\n      </RootContainer>\n    </Container>\n  );\n};\n\nexport default Home;\n","import styled, { keyframes } from 'styled-components';\n\nconst zoomIn = keyframes`\n  0% {\n    display: block;\n    transform: scale(1);\n  }\n  9% {\n    transform: scale(1.1) translate(100px);\n  }\n  10% {\n    transform: scale(1.1) translate(-200px);\n  }\n  11% {\n    transform: scale(1.1) translate(0);\n  }\n  52% {\n    transform: scale(2.5) translate(200px);\n  }\n  53% {\n    transform: scale(2.5) translate(-150px);\n  }\n  54% {\n    transform: scale(2.5) translate(100px);\n  }\n  75% {\n    transform: scale(3.5) translate(200px);\n  }\n  76% {\n    transform: scale(3.5) translate(-50px);\n  }\n  77% {\n    transform: scale(3.5) translate(120px);\n  }\n  99% {\n    transform: scale(5);\n    opacity: 0.9;\n  }\n  100% {\n    opacity: 0;\n  }\n`;\n\nexport const Container = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  display: ${props => (props.isShow ? 'block' : 'none')};\n  width: 100%;\n  height: 100%;\n  z-index: 3;\n`;\n\nexport const Image = styled.img`\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n  animation-name: ${zoomIn};\n  animation-duration: 0.4s;\n  animation-timing-function: linear;\n  animation-fill-mode: forwards;\n`;\n","import React from 'react';\nimport { Container, Image } from './style';\n\nconst Something = props => {\n  const { page } = props;\n  const isShow = page === 7;\n  const imageSrc =\n    'https://cdn.vox-cdn.com/thumbor/x-4_gX51odoc_j6_jGGbzeGWf3M=/0x0:1280x720/1200x0/filters:focal(0x0:1280x720):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/11980261/slenderman_1125272.jpeg';\n\n  return (\n    <Container isShow={isShow}>\n      <Image src={imageSrc} alt=\"\" />\n    </Container>\n  );\n};\n\nexport default Something;\n","const colorTranslator = page => {\n  switch (page) {\n    case 1:\n      return '#000000';\n    case 2:\n      return '#111111';\n    case 3:\n      return '#333333';\n    case 4:\n      return '#EF9A9A';\n    case 5:\n      return '#E57373';\n    case 6:\n      return '#F44336';\n    default:\n      return '#ff0000';\n  }\n};\n\nexport default colorTranslator;\n","const backgroundTranslator = page => {\n  switch (page) {\n    case 1:\n      return '#ffffff';\n    case 2:\n      return '#cccccc';\n    case 3:\n      return '#aaaaaa';\n    case 4:\n      return '#666666';\n    case 5:\n      return '#393939';\n    case 6:\n      return '#212121';\n    default:\n      return '#000000';\n  }\n};\n\nexport default backgroundTranslator;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  color: ${props => props.color || '#000000'};\n  background: ${props => props.background || 'transparent'};\n  transition: 1s ease-in-out;\n`;\n\nexport const Wrapper = styled.div`\n  max-width: 1024px;\n  padding: 16px 32px;\n  margin: auto;\n`;\n\nexport const Title = styled.h1`\n  text-align: center;\n`;\n\nexport const List = styled.ul`\n  list-style: none;\n  margin: 0;\n  padding: 0;\n`;\n\nexport const ListItem = styled.li`\n  padding: 16px;\n  border: 1px solid #cfcfcf;\n  border-radius: 8px;\n  margin-bottom: 16px;\n`;\n\nexport const ID = styled.p``;\n\nexport const Name = styled.p``;\n\nexport const Body = styled.p``;\n\nexport const ToggleLoading = styled.div``;\n\nexport const LoadingTag = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n\nexport const Skeleton = styled.div`\n  width: 100%;\n  height: 180px;\n  background: #cfcfcf;\n  border-radius: 8px;\n  margin-bottom: 16px;\n`;\n\nexport const PageWrapper = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  height: 100%;\n  z-index: 2;\n`;\n\nexport const Page = styled.span`\n  display: inline-block;\n  padding: 8px 12px;\n  color: ${props => props.color || '#000000'};\n  background: ${props => props.background || '#ffffff'};\n  border: 1px solid #000000;\n  border-radius: 2px;\n`;\n","import React, { useState, useEffect, useRef } from 'react';\nimport Something from '../../components/Something';\nimport colorTranslator from '../../utils/colorTranslator';\nimport backgroundTranslator from '../../utils/backgrounTranslator';\nimport {\n  Container,\n  Wrapper,\n  Title,\n  List,\n  ListItem,\n  ID,\n  Name,\n  Body,\n  ToggleLoading,\n  LoadingTag,\n  Skeleton,\n  Page,\n  PageWrapper,\n} from './style';\n\nconst InfiniteList = () => {\n  const toggleLoadingRef = useRef(null);\n  const [data, setData] = useState([]);\n  const [page, setPage] = useState(1);\n  const [isLoading, setIsLoading] = useState(false);\n  const color = colorTranslator(page);\n  const background = backgroundTranslator(page);\n\n  // 換頁時會觸發的 hook\n  // 也就是無限加載時會觸發換頁\n  useEffect(() => {\n    const fetchData = async () => {\n      // 模擬打一次 API 拿 10 筆\n      const start = (page - 1) * 10 + 1;\n      const end = page * 10;\n      const idList = [];\n\n      let counter = start;\n      while (counter <= end) {\n        idList.push(counter);\n        counter++;\n      }\n\n      // 觸發 Loading 狀態並發送 Request\n      setIsLoading(true);\n      const newData = await Promise.all(\n        idList.map(async id => {\n          const api = 'https://jsonplaceholder.typicode.com/comments';\n          const response = await fetch(`${api}/${id}`);\n\n          return await response.json();\n        }),\n      );\n\n      // 關閉 Loading 狀態並 setData\n      setIsLoading(false);\n      setData(previousData => [...previousData, ...newData]);\n    };\n\n    fetchData();\n  }, [page]);\n\n  // 建立 observer 及綁定事件的 hook\n  useEffect(() => {\n    // 設定 callback\n    const callback = entries => {\n      entries.forEach(entry => {\n        // 如果沒有在交互狀態就返回\n        console.log(entry);\n        if (!entry.isIntersecting || !data.length) return;\n\n        setPage(previousPage => previousPage + 1);\n      });\n    };\n\n    // 設定 options\n    // threshold 表示完全呈現才算是有交互\n    const options = {\n      threshold: 1,\n    };\n\n    // 建立 observer 並開始觀察 ToggleLoading 元件\n    const observer = new IntersectionObserver(callback, options);\n    const toggleLoading = toggleLoadingRef.current;\n    if (!toggleLoading) return;\n\n    observer.observe(toggleLoading);\n\n    return () => observer.unobserve(toggleLoading);\n  }, [toggleLoadingRef, data]);\n\n  return (\n    <Container color={color} background={background}>\n      <Wrapper>\n        {/* 標題 */}\n        <Title>Inifinite List</Title>\n\n        {/* Infinite List 無限加載列表 */}\n        <List>\n          {/* 尚未載入資料時的 Skeleton */}\n          {!data.length && <Skeleton />}\n          {!data.length && <Skeleton />}\n          {!data.length && <Skeleton />}\n\n          {/* 呈現列表資料 */}\n          {data.length &&\n            data.map(data => (\n              <ListItem key={data.id}>\n                <ID>id: {data.id}</ID>\n                <Name>name: {data.name}</Name>\n                <Body>body: {data.body}</Body>\n              </ListItem>\n            ))}\n\n          {/* 觸發加載的元件 */}\n          <ToggleLoading ref={toggleLoadingRef} />\n\n          {/* 如果在正在載入就顯示 Loading */}\n          {isLoading && <LoadingTag>Loading...</LoadingTag>}\n        </List>\n      </Wrapper>\n      <Something page={page} />\n      <PageWrapper>\n        <Page color={color} background={background}>\n          {page}\n        </Page>\n      </PageWrapper>\n    </Container>\n  );\n};\n\nexport default InfiniteList;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  width: 100%;\n  max-width: 1024px;\n  padding: 0 32px;\n  margin: auto;\n  overflow: hidden;\n`;\n\nexport const Title = styled.h1`\n  text-align: center;\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  list-style: none;\n  padding: 0;\n  transform: translateX(16px);\n`;\n\nexport const ListItem = styled.li`\n  position: relative;\n  flex: 1;\n  margin-right: 32px;\n  margin-bottom: 32px;\n  width: 100%;\n  min-width: 300px;\n  background: #cfcfcf;\n  border-radius: 12px;\n\n  & > .lazy {\n    opacity: 0.5;\n  }\n\n  &::before {\n    content: '';\n    display: block;\n    padding-top: 100%;\n  }\n`;\n\nexport const Image = styled.img`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: auto;\n  object-fit: cover;\n  transition: 0.25s ease-in-out;\n  border-radius: 12px;\n  opacity: 1;\n`;\n","import React, { useEffect } from 'react';\nimport { Container, Title, List, ListItem, Image } from './style';\n\nconst LazyImage = () => {\n  // 模擬拿取 30 張圖片\n  const renderImages = () => {\n    const idList = [];\n\n    let counter = 1;\n    const limit = 30;\n    while (counter <= limit) {\n      idList.push(counter);\n      counter++;\n    }\n\n    // src      放低解析度的圖片\n    // data-src 放真正要給使用者看的圖片\n    return idList.map(id => (\n      <ListItem key={id}>\n        <Image\n          className=\"lazy\"\n          src={`https://picsum.photos/id/${id}/10/10`}\n          data-src={`https://picsum.photos/id/${id}/300/300`}\n          alt=\"\"\n        />\n      </ListItem>\n    ));\n  };\n\n  // 懶加載圖片\n  const lazyLoading = () => {\n    // 設定 callback\n    const callback = (entries, observer) => {\n      entries.forEach(entry => {\n        // 如果不是處於交互狀態就返回\n        if (!entry.isIntersecting) return;\n\n        // 將處於交互狀態的 image 拿出來\n        // 並且將 src 替換為 data-src\n        // 接下來移除 lazy 標籤\n        // 最後取消觀察\n        let image = entry.target;\n        image.src = image.dataset.src;\n        image.classList.remove('lazy');\n        observer.unobserve(image);\n      });\n    };\n\n    // 設定 options\n    // 元件的 50% 出現在視野時觸發\n    const options = {\n      threshold: 0.5,\n    };\n\n    // 註冊 observer 並將含有 lazy 標籤的 image 全部納入觀察名單中\n    const observer = new IntersectionObserver(callback, options);\n    const lazyImages = document.getElementsByClassName('lazy');\n    Array.from(lazyImages).forEach(lazyImage => {\n      observer.observe(lazyImage);\n    });\n  };\n\n  // 確認目前頁面加載的狀態\n  // 確保 image 的元件都已經載入\n  useEffect(() => {\n    if (document.readyState === 'loading') {\n      document.addEventListener('DOMContentLoaded', lazyLoading);\n      return;\n    }\n\n    lazyLoading();\n\n    return () => document.removeEventListener('DOMContentLoaded', lazyLoading);\n  }, []);\n\n  return (\n    <Container>\n      <Title>Lazy Image</Title>\n      <List>{renderImages()}</List>\n    </Container>\n  );\n};\n\nexport default LazyImage;\n","import { createGlobalStyle } from 'styled-components';\n\nexport default createGlobalStyle`\n  * {\n    box-sizing: border-box;\n  }\n\n  html,\n  body,\n  #root {\n    margin: 0;\n    width: 100%;\n    height: 100%;\n  }\n`;\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const Container = styled.div`\n  position: relative;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 16px 32px;\n  max-width: 1024px;\n  margin: auto;\n  transform: translateX(12px);\n  z-index: 9;\n`;\n\nexport const StyledLink = styled(NavLink)`\n  min-width: 96px;\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  color: ${props => (props.selected ? '#ffffff' : '#388e3c')};\n  background: ${props => (props.selected ? '#388e3c' : 'unset')};\n  border: 1px solid #388e3c;\n  border-radius: 4px;\n  padding: 12px 16px;\n  text-decoration: none;\n  margin-right: 24px;\n  transition: 0.25s ease-in-out;\n\n  &:hover {\n    color: #ffffff;\n    background: #388e3c;\n  }\n`;\n","import React, { useState } from 'react';\nimport { Container, StyledLink } from './style';\n\nconst HOME = '/';\nconst INFINITE_LIST = '/infinite-list';\nconst LAZY_IMAGE = '/lazy-image';\n\nconst NavigationBar = () => {\n  const defaultPath = window.location.pathname;\n  const [currentPath, setCurrentPath] = useState(defaultPath);\n  const isHome = currentPath === HOME;\n  const isInfiniteList = currentPath === INFINITE_LIST;\n  const isLazyImage = currentPath === LAZY_IMAGE;\n\n  return (\n    <Container>\n      <StyledLink\n        to={HOME}\n        selected={isHome}\n        onClick={() => setCurrentPath(HOME)}\n      >\n        Home\n      </StyledLink>\n      <StyledLink\n        to={INFINITE_LIST}\n        selected={isInfiniteList}\n        onClick={() => setCurrentPath(INFINITE_LIST)}\n      >\n        Infinite List\n      </StyledLink>\n      <StyledLink\n        to={LAZY_IMAGE}\n        selected={isLazyImage}\n        onClick={() => setCurrentPath(LAZY_IMAGE)}\n      >\n        Lazy Image\n      </StyledLink>\n    </Container>\n  );\n};\n\nexport default NavigationBar;\n","import React from 'react';\nimport Home from '../Home';\nimport InfiniteList from '../InfiniteList';\nimport LazyImage from '../LazyImage';\nimport GlobalStyle from '../../components/GlobalStyle';\nimport NavigationBar from '../../components/NavigationBar';\nimport { BrowserRouter, Route } from 'react-router-dom';\n\nconst App = () => {\n  return (\n    <BrowserRouter basename=\"/intersection-observer-lab\">\n      <GlobalStyle />\n      <NavigationBar />\n      <Route exact path=\"/\" component={Home} />\n      <Route path=\"/infinite-list\" component={InfiniteList} />\n      <Route path=\"/lazy-image\" component={LazyImage} />\n    </BrowserRouter>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './containers/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}